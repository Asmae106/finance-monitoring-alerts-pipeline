services:
    zookeeper: 
        image: confluentinc/cp-zookeeper:7.4.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        healthcheck:
            test: ['CMD','bash','-c', "echo 'Container is okay' | nc localhost 2181"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - monitoring 
    
    broker:
        image: confluentinc/cp-server:7.4.0
        hostname: broker 
        container_name: kafka_broker
        depends_on:
            zookeeper:
                condition: service_healthy
        ports:
            - "9092:9092"
            - "9101:9101"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_JMX_PORT: 9101
            KAFKA_JMX_HOSTNAME: localhost
            KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: 'false'
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
        networks:
            - monitoring
        healthcheck:
            test: ["CMD", "bash", "-c", 'nc -z localhost 9092']
            interval: 10s
            timeout: 5s
            retries: 5
    kafkaui:
        image: provectuslabs/kafka-ui 
        hostname: kafkaui 
        container_name: kafkaui 
        environment:
            KAFKA_CLUSTERS_0_NAME: 'local'
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:29092'
            KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
        depends_on:
            zookeeper: 
                condition: service_healthy
            broker:
                condition: service_healthy
        ports:
            - "9090:8080"
        networks:
            - monitoring
        healthcheck:
            test: ["CMD","bash","-c" ,'nc -z localhost 9090']
            interval: 10s
            timeout: 5s
            retries: 5
    redis: 
        image: redis:latest 
        hostname: redis 
        container_name: redis 
        ports:
            - "6379:6379"
        networks:
            - monitoring
        healthcheck:
            test: ["CMD","bash" , "-c", 'nc -z localhost 6379']
            interval: 10s
            timeout: 5s
            retries: 5
networks:
  monitoring:
    driver: bridge 
